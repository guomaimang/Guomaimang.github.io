import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as l,c as a,e}from"./app-fa21692e.js";const n={},t=e('<h1 id="btc-smart-contract" tabindex="-1"><a class="header-anchor" href="#btc-smart-contract" aria-hidden="true">#</a> BTC Smart Contract</h1><h2 id="how-bitcoin-works" tabindex="-1"><a class="header-anchor" href="#how-bitcoin-works" aria-hidden="true">#</a> How Bitcoin works</h2><p>Digital Signature</p><ul><li>Public key pk, and Private Key sk (need to kept secret)</li><li>Signing a transaction with sk, <strong>verify with pk</strong><ul><li>私钥签名，公钥验证</li><li>这意味着只有拥有私钥的人才能发送有效的交易。这确保了交易的真实性和发送方的身份。</li></ul></li><li>Transactions and UTXO</li><li>Consensus: Proof of work</li></ul><h2 id="wallet" tabindex="-1"><a class="header-anchor" href="#wallet" aria-hidden="true">#</a> Wallet</h2><h3 id="wallet-for-managing-keys" tabindex="-1"><a class="header-anchor" href="#wallet-for-managing-keys" aria-hidden="true">#</a> Wallet for Managing Keys</h3><ul><li>Public key can be used as the receipt address</li><li>Private key is needed to spend (send) a coin to an address<br> 「私钥是花费（发送）加密货币到一个地址所需的。」<br> 私钥是一串字符，必须保密，用于签署交易并发送加密货币。</li><li>ownership of a coin <ul><li>拥有私钥意味着拥有该加密货币的所有权</li><li>只有持有私钥的人才能使用该加密货币。</li></ul></li></ul><p>Private key should be random, long, and kept secret -&gt; difficulty for brute-force/dictionary attack</p><p>用户可能需要维护许多地址/密钥。如何安全地存储所有这些？打印/写入并保护它？</p><p>Wallet application: acts like a vault storing private keys</p><h3 id="wallet-types" tabindex="-1"><a class="header-anchor" href="#wallet-types" aria-hidden="true">#</a> Wallet Types</h3><ul><li>非确定性「Non - deterministic」：密钥是随机生成的</li><li>Deterministic: A single master key (or called seed) is used to generate new keys <ul><li>确定性钱包使用一个主密钥或种子来生成一系列相关联的密钥</li><li>这样，可以通过一个种子恢复所有相关的密钥。</li><li>Seeded wallet &amp; Hierarchical Deterministic (HD) 「层次确定性」wallets (BIP-32/44) <ul><li>种子钱包使用一个种子来生成一系列密钥</li><li>而层次确定性钱包则在此基础上增加了层次结构</li><li>使得可以生成子密钥和孙密钥。</li></ul></li><li>In some client, require to input Mnemonic code「助记词」 (BIP-39) <ul><li>助记词是一组单词，用于生成种子，从而生成一系列密钥。这些助记词基于BIP-39标准。</li></ul></li></ul></li></ul><p>假设你有一个HD钱包，并且你想生成多个地址来接收比特币付款，同时确保只需要备份一个种子。</p><p>使用HD钱包，你可以从一个种子生成多个地址。这样，即使你生成了成千上万个地址，你也只需要备份一个种子。HD钱包通过一个种子生成多个密钥，简化了备份和恢复过程，确保了安全性和便捷性。</p><ol><li><strong>生成种子</strong>：使用HD钱包软件生成一个种子（例如24个助记词）。</li><li><strong>生成主密钥</strong>：将种子通过BIP-39算法转换为主密钥。</li><li><strong>生成密钥树</strong>：使用BIP-32标准，从主密钥生成一棵密钥树。</li><li><strong>生成地址</strong>：从密钥树的不同节点生成多个比特币地址。</li><li><strong>备份种子</strong>：将生成的24个助记词妥善保管。</li></ol><figure><img src="https://pic.hanjiaming.com.cn/2024/10/10/fa6df23c5c15c.png" alt="1728549593237.png" tabindex="0" loading="lazy"><figcaption>1728549593237.png</figcaption></figure><h2 id="bitcoin-block" tabindex="-1"><a class="header-anchor" href="#bitcoin-block" aria-hidden="true">#</a> Bitcoin Block</h2><figure><img src="https://pic.hanjiaming.com.cn/2024/10/10/c1015a53cf521.png" alt="1728549975724.png" tabindex="0" loading="lazy"><figcaption>1728549975724.png</figcaption></figure><p>上面展示了比特币区块链中每个区块的结构。每个区块包括两个主要部分：</p><ol><li><strong>Block Header（区块头）</strong>： <ul><li><strong>Hash (Previous Block Header)</strong>：前一个区块头的哈希值，用于链式连接区块。</li><li><strong>Timestamp</strong>：区块创建的时间戳。</li><li><strong>Nonce</strong>：用于工作量证明（PoW）的随机数，矿工通过调整它来找到满足条件的哈希值。</li><li><strong>Hash of Block Data</strong>：区块数据的哈希值，通常是默克尔树的根哈希。</li></ul></li><li><strong>Block Data（区块数据）</strong>： <ul><li>包含所有交易的列表。</li></ul></li></ol><p>矿工通过调整Nonce、区块数据的哈希值（默克尔树根）和时间戳来找到一个满足PoW条件的哈希值。</p><figure><img src="https://pic.hanjiaming.com.cn/2024/10/10/0eb72ec7043a4.png" alt="1728550145193.png" tabindex="0" loading="lazy"><figcaption>1728550145193.png</figcaption></figure><figure><img src="https://pic.hanjiaming.com.cn/2024/10/10/ca0db05919b92.png" alt="1728550183075.png" tabindex="0" loading="lazy"><figcaption>1728550183075.png</figcaption></figure><h2 id="transactions-in-a-block" tabindex="-1"><a class="header-anchor" href="#transactions-in-a-block" aria-hidden="true">#</a> Transactions in a Block</h2><p>Transactions need to be included in a Block</p><img src="https://pic.hanjiaming.com.cn/2024/10/10/1e2f252d84b1c.png" alt="1728552404947.png" style="zoom:67%;"><p>这张图展示了区块链中未花费交易输出（UTXO）和已花费交易输出（STXO）的概念，以及它们在不同交易过程中的变化。</p><p>图中每个区块链部分代表一个区块，底部的UTXO集合展示了每个区块状态下的UTXO情况。</p><ol><li><strong>图例</strong>： <ul><li>绿色方块：未花费交易输出（UTXO）</li><li>红色方块：已花费交易输出（STXO）</li></ul></li><li><strong>区块链部分</strong>： <ul><li>每个区块链部分表示一个区块，区块内包含一系列交易。</li></ul></li><li><strong>交易过程</strong>： <ul><li>交易#0：Joe 进行的交易，产生了一个UTXO，属于 Alice。</li><li>交易#1：Alice 使用了 Joe 给她的UTXO，产生了一个新的UTXO，属于 Bob。</li><li>交易#2：Bob 使用了 Alice 给他的UTXO，产生了两个新的UTXO，一个属于 Gopesh，一个属于 Bob。</li></ul></li></ol>',29),o=[t];function r(c,s){return l(),a("div",null,o)}const p=i(n,[["render",r],["__file","btcsc.html.vue"]]);export{p as default};
